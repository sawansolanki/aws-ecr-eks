name: Deploy to ECR

on:
 workflow_dispatch:
    
env:
    ROOT_PATH: '${{github.workspace}}/AWS-ECR-to-EKS-Integration'

jobs:
  
  vpc-ecr-setup:
    
    name: Build Image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: dockerimage-to-eks
        IMAGE_TAG: latest
      working-directory : ${{env.ROOT_PATH}}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
        
#     - name: Deploy to AWS CloudFormation
#       uses: aws-actions/aws-cloudformation-github-deploy@v1
#       with:
#         name: MyStack-sa1-VPC
#         template: ${{env.ROOT_PATH}}/amazon-eks-vpc-private-subnets.yaml
# vpc is already crated and then 'vpc-ecr-setup' job failed, hence commented
  
  eks-setup:
   needs: vpc-ecr-setup
   environment: approval-env
   name: cluster steup
   runs-on: ubuntu-latest
   
   steps:
   
   -  name: Check out code
      uses: actions/checkout@v2

   
   - name: Deploy to AWS EKS cluster
     uses: aws-actions/aws-cloudformation-github-deploy@v1
     with:
       name: MyStack-k8s-sa1
       template: ${{env.ROOT_PATH}}/amazon-eks-vpc-private-subnets.yaml
  
#     - name: deploy to cluster
#       uses: kodermax/kubectl-aws-eks@master
#       env:
#         KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}
#         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
#         ECR_REPOSITORY: dockerimage-to-eks
#         IMAGE_TAG: latest
#       with:
#         args: set image deployment/$ECR_REPOSITORY $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
    
        
